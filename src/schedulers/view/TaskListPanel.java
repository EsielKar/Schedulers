package schedulers.view;

import java.awt.event.MouseEvent;
import javax.swing.event.ListSelectionEvent;
import schedulers.controller.Controller;
import schedulers.model.Task;

/**
 *
 * @author Esiel
 */
public class TaskListPanel extends javax.swing.JPanel {
    
    private Controller controller;

    public TaskListPanel() {
        initComponents();
        /*taskList.addListSelectionListener((ListSelectionEvent e) -> {
            System.out.println("valueChanged");
            System.out.println(e);
        });*/
    }
    
    void setController(Controller controller) {
        this.controller = controller;
        taskList.setModel(controller.getTaskListModel());
        
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        taskLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        taskList = new javax.swing.JList<>();
        deleteButton = new javax.swing.JButton();

        setBorder(javax.swing.BorderFactory.createEtchedBorder());
        setLayout(new java.awt.GridBagLayout());

        taskLabel.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        taskLabel.setText("Tareas");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 8, 0, 0);
        add(taskLabel, gridBagConstraints);

        taskList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        taskList.setCellRenderer(new TaskPanel());
        taskList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                taskListMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(taskList);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        add(jScrollPane1, gridBagConstraints);

        deleteButton.setText("Eliminar todas");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 8);
        add(deleteButton, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        controller.removeAllTask();
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void taskListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_taskListMouseClicked
        if (evt.getButton() == MouseEvent.BUTTON3)
            controller.removeTask(this.taskList.getSelectedIndex());
    }//GEN-LAST:event_taskListMouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton deleteButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel taskLabel;
    private javax.swing.JList<Task> taskList;
    // End of variables declaration//GEN-END:variables

}
