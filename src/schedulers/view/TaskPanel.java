/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package schedulers.view;

import java.awt.Color;
import java.awt.Component;
import javax.swing.JList;
import javax.swing.ListCellRenderer;
import schedulers.model.PeriodicTask;
import schedulers.model.Task;

/**
 *
 * @author Esiel
 */
public class TaskPanel extends javax.swing.JPanel implements ListCellRenderer<Task>{

    /**
     * Creates new form TaskPanel
     */
    public TaskPanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        arrivalTimeContentLabel = new javax.swing.JLabel();
        burstTimeContentLabel = new javax.swing.JLabel();
        deadlineContentLabel = new javax.swing.JLabel();
        periodContentLabel = new javax.swing.JLabel();
        idContentLabel = new javax.swing.JLabel();
        taskColorPanel = new javax.swing.JPanel();

        setBorder(javax.swing.BorderFactory.createEtchedBorder());
        setLayout(new java.awt.GridBagLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel1.setText("ID:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 8, 0, 0);
        add(jLabel1, gridBagConstraints);

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel2.setText("Tiempo de ejecuci√≥n:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 8, 0, 0);
        add(jLabel2, gridBagConstraints);

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel3.setText("Deadline:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 8, 0, 0);
        add(jLabel3, gridBagConstraints);

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel4.setText("Tiempo de llegada:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 8, 0, 0);
        add(jLabel4, gridBagConstraints);

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel5.setText("Periodo:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 8, 0, 0);
        add(jLabel5, gridBagConstraints);

        arrivalTimeContentLabel.setText("0");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 8, 0, 0);
        add(arrivalTimeContentLabel, gridBagConstraints);

        burstTimeContentLabel.setText("2");
        burstTimeContentLabel.setMaximumSize(new java.awt.Dimension(24, 16));
        burstTimeContentLabel.setPreferredSize(new java.awt.Dimension(24, 16));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 8, 0, 0);
        add(burstTimeContentLabel, gridBagConstraints);

        deadlineContentLabel.setText("5");
        deadlineContentLabel.setMaximumSize(new java.awt.Dimension(24, 16));
        deadlineContentLabel.setPreferredSize(new java.awt.Dimension(24, 16));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(0, 8, 0, 0);
        add(deadlineContentLabel, gridBagConstraints);

        periodContentLabel.setText("5");
        periodContentLabel.setMaximumSize(new java.awt.Dimension(24, 16));
        periodContentLabel.setPreferredSize(new java.awt.Dimension(24, 16));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(0, 8, 0, 0);
        add(periodContentLabel, gridBagConstraints);

        idContentLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        idContentLabel.setText("1");
        idContentLabel.setMaximumSize(new java.awt.Dimension(24, 16));
        idContentLabel.setName(""); // NOI18N
        idContentLabel.setPreferredSize(new java.awt.Dimension(24, 16));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 8, 0, 0);
        add(idContentLabel, gridBagConstraints);

        taskColorPanel.setBackground(new java.awt.Color(0, 204, 255));
        taskColorPanel.setMinimumSize(new java.awt.Dimension(16, 16));
        taskColorPanel.setName(""); // NOI18N
        taskColorPanel.setPreferredSize(new java.awt.Dimension(16, 16));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE_LEADING;
        gridBagConstraints.insets = new java.awt.Insets(0, 8, 0, 0);
        add(taskColorPanel, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel arrivalTimeContentLabel;
    private javax.swing.JLabel burstTimeContentLabel;
    private javax.swing.JLabel deadlineContentLabel;
    private javax.swing.JLabel idContentLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel periodContentLabel;
    private javax.swing.JPanel taskColorPanel;
    // End of variables declaration//GEN-END:variables

    @Override
    public Component getListCellRendererComponent(JList<? extends Task> list, Task value, int index, boolean isSelected, boolean cellHasFocus) {
        if (isSelected) this.setBackground(new Color(128, 180, 175));
        else this.setBackground(new Color(184, 214, 212));
        
        this.idContentLabel.setText(Long.toString(value.getId()));
        this.arrivalTimeContentLabel.setText(Long.toString(value.getArrivalTime()));
        this.burstTimeContentLabel.setText(Long.toString(value.getBurstTime()));
        this.deadlineContentLabel.setText(Long.toString(value.getDeadlineTime()));
        if (value instanceof PeriodicTask) this.periodContentLabel.setText(Long.toString(((PeriodicTask) value).getPeriodTime()));
        else this.periodContentLabel.setText("N/A");
        this.taskColorPanel.setBackground(Task.taskColor((int) value.getId()));
        return this;
    }

}
